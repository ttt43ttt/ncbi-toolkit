;
; NetSchedule client configuration
; 
[netschedule_api]

client_name = client_sample

; Specifies NetSchedule service. Format: lb_service_name or host:port
service = NS_test

; Name of the queue (DO NOT use default queue for your application)
queue_name = sample

; Instructs the clients to try to fit its output onto the netschedule's 
; internal storage (its size is usually about 2Kb). If the data does not fit there
; it will be saved into an external blob storage (netcahe).
; Default value is true
;use_embedded_storage = true

; Time interval in seconds when client is automatically rebalanced
rebalance_time = 10
; Number of requests before rebalancing
rebalance_requests = 100

; Sets a communication timeout (in seconds) between a client and a server
; Default is 12 secs
;communication_timeout = 20


; Network storage (NetCache) configuration
;
[netcache_api]

client_name = client_sample

; LB service name
service = NC_test

; If this parameter is set to true then before the job is processed the input data blob 
; will be stored into a file on the local file system and the job will get a stream to 
; that file.
; Default is false
cache_input = false

; If this parameter is set to true then the job will get a stream to file on the local 
; file system as an output stream. After job is done the content of this file will be
; stored to a blob in the storage.
; Default is false
cache_output = false 

; If 'cache_input' or 'cache_output' are set to true, sets a temporary directory where 
; cached input/ouput is stored.
; Default: .
; tmp_dir = /tmp
; Synonym for tmp_dir. if both are set tmp_dir is used.
; tmp_path = /tmp

; Time interval in seconds when client is automatically rebalanced
rebalance_time = 10

; Number of requests before rebalancing
rebalance_requests = 100

; Sets a communication timeout (in seconds) between a client and a server
; Default is 12 secs
;communication_timeout = 20

; Sets a communication protocol. Supported protocols are 'simple' and 'persistent'
; 'simple' protocol establishes a new connection to the NetCache server for each request.
; 'persistent' protocol supports a permanent connection to the server (requires NetCache 
; server version 2.5.9 and high)
; Default is 'simple'
;protocol = persistent

; If this parameter is set to true, blob key contains service name and
; server (listed in the blob key) is not present in that service,
; then do not try to connect to that server.
; If set to 'auto' and key has a "Check-Server" hint set to NO,
; then assume 'server_check = no'; otherwise, assume 'server_check = yes'.
; Otherwise, unconditionally try to connect to the server.
; Default is 'auto'
;server_check = auto

; This is a hint for the blob readers that use 'server_check = auto'.
; If set to true, blob readers are advised to pre-check the server which is listed in the blob key.
; Default is true
;server_check_hint = true

